`ifndef DRV_SV
`define DRV_SV

`include "globals.sv"
import globals::*;

//receives stimulus generated by gen & drives it into the DUT
class driver;
    
    //driver properties
    int debug;
    int transNo=0;
    string msg ="[ Driver transaction: ";
    string cat;

    //creating virtual interface handle
    virtual intf vif;

    //mailbox handle
    mailbox gen2driv;

    //constructor
    function new (virtual intf vif, mailbox gen2driv);
        //getting the interface
        this.vif=vif;
        //retrieve mail from environment
        this.gen2driv=gen2driv;
    endfunction

    //drive transaction into interface
    task main();
        forever begin
            transactionIn trans2DUT;
            //blocking method
            gen2driv.get(trans2DUT);

            //drive transaction from obtained from gen into virtual interface using timing described in cb encapsulated in interface
            //@(posedge vif.cb_driv);
            vif.cb_driv.a_in <= trans2DUT.a_in;
            vif.cb_driv.b_in <= trans2DUT.b_in;
            vif.cb_driv.op_in <= trans2DUT.op_in;
            vif.cb_driv.reset <= trans2DUT.reset;

            cat.itoa(transNo);msg ="[ Driver transaction: ";
            if(debug) begin
                msg={msg, cat, " ]"};
                @(posedge vif.cb_driv);
                trans2DUT.display(msg);
            end
            transNo++;
        end
    endtask

endclass

`endif
